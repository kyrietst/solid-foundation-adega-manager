name: Regression Tests

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  regression-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      with:
        # Fetch de todo o hist√≥rico para comparar com main
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Instalar depend√™ncias
      run: npm ci
      
    - name: Executar testes cr√≠ticos de regress√£o
      run: |
        echo "üß™ Executando testes cr√≠ticos de regress√£o..."
        
        # Executar apenas testes cr√≠ticos para valida√ß√£o r√°pida
        npm run test:run -- --reporter=verbose 2>&1 | tee regression-results.txt
        
        # Verificar se h√° falhas cr√≠ticas
        CRITICAL_FAILURES=$(grep -c "√ó " regression-results.txt || true)
        
        if [ "$CRITICAL_FAILURES" -gt 0 ]; then
          echo "‚ùå Detectadas $CRITICAL_FAILURES falhas cr√≠ticas"
          echo "üö® REGRESS√ÉO DETECTADA - Revisar mudan√ßas"
          exit 1
        else
          echo "‚úÖ Nenhuma regress√£o cr√≠tica detectada"
        fi
        
    - name: Validar opera√ß√µes financeiras cr√≠ticas
      run: |
        echo "üí∞ Validando opera√ß√µes financeiras cr√≠ticas..."
        
        # Executar especificamente testes de sales e checkout
        npm run test:run -- --testNamePattern="checkout|sales|cart" --reporter=verbose 2>&1 | tee financial-tests.txt
        
        FINANCIAL_FAILURES=$(grep -c "√ó " financial-tests.txt || true)
        
        if [ "$FINANCIAL_FAILURES" -gt 0 ]; then
          echo "üí∏ ALERTA: Falhas em opera√ß√µes financeiras detectadas!"
          echo "üõë Bloqueando merge at√© corre√ß√£o"
          exit 1
        else
          echo "‚úÖ Opera√ß√µes financeiras validadas"
        fi
        
    - name: Validar seguran√ßa e permiss√µes
      run: |
        echo "üîê Validando seguran√ßa e permiss√µes..."
        
        # Executar testes de autentica√ß√£o e permiss√µes
        npm run test:run -- --testNamePattern="auth|permission|security" --reporter=verbose 2>&1 | tee security-tests.txt
        
        SECURITY_FAILURES=$(grep -c "√ó " security-tests.txt || true)
        
        if [ "$SECURITY_FAILURES" -gt 0 ]; then
          echo "üö® ALERTA DE SEGURAN√áA: Falhas detectadas!"
          echo "üõë Bloqueando merge por quest√µes de seguran√ßa"
          exit 1
        else
          echo "‚úÖ Seguran√ßa e permiss√µes validadas"
        fi
        
    - name: Relat√≥rio de regress√£o
      if: always()
      run: |
        echo "üìã RELAT√ìRIO DE REGRESS√ÉO COMPLETO"
        echo "================================="
        
        # Extrair m√©tricas gerais
        if [ -f regression-results.txt ]; then
          TOTAL=$(grep -o "[0-9]\+ tests" regression-results.txt | head -1 | grep -o "[0-9]\+" || echo "0")
          PASSED=$(grep -o "[0-9]\+ passed" regression-results.txt | head -1 | grep -o "[0-9]\+" || echo "0")
          
          if [ "$TOTAL" -gt 0 ]; then
            SUCCESS_RATE=$(echo "scale=1; $PASSED * 100 / $TOTAL" | bc -l)
            echo "üìä Taxa geral: $SUCCESS_RATE% ($PASSED/$TOTAL)"
          fi
        fi
        
        # Status por √°rea cr√≠tica
        echo ""
        echo "üîç STATUS POR √ÅREA CR√çTICA:"
        
        if [ -f financial-tests.txt ]; then
          FINANCIAL_TOTAL=$(grep -o "[0-9]\+ tests" financial-tests.txt | head -1 | grep -o "[0-9]\+" || echo "0")
          FINANCIAL_PASSED=$(grep -o "[0-9]\+ passed" financial-tests.txt | head -1 | grep -o "[0-9]\+" || echo "0")
          echo "üí∞ Financeiro: $FINANCIAL_PASSED/$FINANCIAL_TOTAL"
        fi
        
        if [ -f security-tests.txt ]; then
          SECURITY_TOTAL=$(grep -o "[0-9]\+ tests" security-tests.txt | head -1 | grep -o "[0-9]\+" || echo "0")
          SECURITY_PASSED=$(grep -o "[0-9]\+ passed" security-tests.txt | head -1 | grep -o "[0-9]\+" || echo "0")
          echo "üîê Seguran√ßa: $SECURITY_PASSED/$SECURITY_TOTAL"
        fi
        
        echo ""
        echo "‚úÖ Valida√ß√£o de regress√£o conclu√≠da"
        
    - name: Upload resultados de regress√£o
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: regression-test-results
        path: |
          regression-results.txt
          financial-tests.txt
          security-tests.txt
        retention-days: 30